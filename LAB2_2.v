// This code was originally generated by Terasic System Builder
// then amended by AK

`default_nettype none // disallow associating new names with undeclared wires

module LAB2_2(
    // keep the port declarations below (defined in the QSF file) and use these names in your design
    input ADC_CLK_10, MAX10_CLK1_50, MAX10_CLK2_50, // CLOCK
    output [7:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, // SEG7, 6 pcs
    input [1:0] KEY, // inverted push buttons, 2 pcs
    output [9:0] LEDR, // red LEDs, 10 pcs
    input [9:0] SW // slide switches, 10 pcs
);

// *** DO NOT EDIT THE CODE BELOW
wire [1:0] KEYn = ~KEY;
assign LEDR = SW; // display what is entered by SW (this design uses SW[9] only)

assign HEX5 = 8'b_111_1111; // switch OFF the HEXes
//assign HEX4 = 8'b_1111_1111;
//assign HEX3 = 8'b_111_1111;
assign HEX2 = 8'b_1111_1111;
assign HEX1 = 8'b_1111_1111;
assign HEX0 = 8'b_1111_1111;

// *** DO NOT EDIT THE CODE ABOVE

SevSeg SevSeg_1(.HEX_2_disp(SW[8:5]), .segment(HEX4));
wire [7:0] sevseg_2_out; // Explicitly declare sevseg_2_out as a wire

SevSeg SevSeg_2 (.HEX_2_disp(SW[8:5]), .segment(sevseg_2_out));

reg [7:0] r_7LED; // for LHS of the procedural block
always @(*) begin
    if (|KEYn)
        r_7LED = sevseg_2_out;
    else
        r_7LED = 8'b_1111_1111;
end
assign HEX3 = r_7LED; // to drive the output port

// Mebin Mathew
// 33024751

endmodule
